% Simple threshold detector based only on using RMSSD

classdef RMSSD
    methods(Static)
    % Class start

    % Strategy: Calculate RMSSD for each training set, perform predictions
    % based on a certain threshold, and return the threshold value which
    % provided the best F1 score.

    function threshold = train(trainingdata,windowsize,stepsize)
        criterion = RMSSD()
        threshold = funcs.train(trainingdata,RMSSD)
    end

    function score = RMSSD(rr,windowsize,i)
         deltarr = diff(rr(i:i+windowsize));
         score = sqrt(mean(deltarr.^2));
    end

    function result = predict(data,threshold,windowsize,stepsize)
        load(data);
        total_segments = floor(length(rr)/windowsize);
        result = zeros(total_segments,2);
        index = 1;
        for i = 1:stepsize:(length(rr)-windowsize)
            % Calculate the RMSSD score for the given window
            deltarr = diff(rr(i:i+windowsize));
            score = sqrt(mean(deltarr.^2));

            % If RMSSD passes the threshold, it is labelled as 1
            if score > threshold
                result(index,:) = [score, 1];
            else
                result(index,:) = [score, 0];
            end
            index = index + 1;
        end
    end

    % Class end
    end
end